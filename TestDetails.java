package hms;

import com.sun.glass.events.KeyEvent;
import java.sql.*;
import javax.swing.*;

public class TestDetails extends javax.swing.JFrame {

    //initialize the varibales.
    public int testno, nic, atndno;
    public String testn, result;

    public TestDetails() {
        initComponents();//create the constructor. 
    }

    public void setData() { //take the data from interface.
        String a = numberText.getText();
        String b = NICText.getText();
        String c = atndText.getText();
        String d = nameText.getText();
        String e = resultText.getText();
        if (a.length() < 6 && a.length() > 0 && b.length() < 10 && b.length() > 0 && c.length() < 6 && c.length() > 0 && d.length() < 21 & d.length() > 0 && e.length() < 21 && e.length() > 0) {
            testno = Integer.parseInt(a);
            nic = Integer.parseInt(b);
            atndno = Integer.parseInt(c);
            testn = d;
            result = e;
        } else {
            JOptionPane.showMessageDialog(this, "input size error");
        }
    }

    public void reset() { //set all data input places null. 
        numberText.setText("");
        NICText.setText("");
        atndText.setText("");
        nameText.setText("");
        resultText.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        atndText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        NICText = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        resultText = new javax.swing.JTextArea();
        numberText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        nameText = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        getData = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TestDetails");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Details"));

        atndText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                atndTextFocusLost(evt);
            }
        });
        atndText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                atndTextKeyTyped(evt);
            }
        });

        jLabel4.setText("test name:");

        jLabel6.setText("V");

        jLabel1.setText("test No:");

        NICText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                NICTextFocusLost(evt);
            }
        });
        NICText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                NICTextKeyTyped(evt);
            }
        });

        resultText.setColumns(20);
        resultText.setRows(5);
        jScrollPane2.setViewportView(resultText);

        numberText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numberTextKeyTyped(evt);
            }
        });

        jLabel3.setText("Patient attend no:");

        nameText.setColumns(20);
        nameText.setRows(5);
        jScrollPane1.setViewportView(nameText);

        jLabel2.setText("NIC:");

        jLabel5.setText("test result:");

        getData.setText("GetData");
        getData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(NICText, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(getData))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numberText, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(atndText, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(numberText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(NICText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(getData))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(atndText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Buttons"));

        jButton1.setText("Data Retrieve");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3)
                            .addComponent(updateBtn))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(updateBtn)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton2.setText("back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(37, 37, 37)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        tableretrieve t = new tableretrieve(); //see the test details.
        t.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void NICTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NICTextKeyTyped
        char vchar = evt.getKeyChar(); //stop entering not number characters.
        if ((!(Character.isDigit(vchar))) || (vchar == KeyEvent.VK_BACKSPACE) || (vchar == KeyEvent.VK_DELETE)) {
            evt.consume();

        }
    }//GEN-LAST:event_NICTextKeyTyped

    private void NICTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_NICTextFocusLost
        //check whether that input nic already exist in patient attendance. 
        String n = NICText.getText();
        int num = 0;
        if (n.length() != 0) {
            num = Integer.parseInt(n); //check whether nic is already exist or not.
        }
        try {
            connection c = new connection();
            Connection cn = c.getConnect();//create a connection with database.
            Statement st = cn.createStatement();
            if (num != 0) {
                ResultSet rs = st.executeQuery("select * from p_attendance where NIC='" + num + "'");

                if (rs.next() == false) {
                    JOptionPane.showMessageDialog(this, "Wrong patient ID");
                }

            }
        } catch (Exception e) {
            System.out.print(e.getMessage());
        }
    }//GEN-LAST:event_NICTextFocusLost

    private void atndTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_atndTextKeyTyped
        char vchar = evt.getKeyChar(); //stop entering other charcters can only enter number.
        if ((!(Character.isDigit(vchar))) || (vchar == KeyEvent.VK_BACKSPACE) || (vchar == KeyEvent.VK_DELETE)) {
            evt.consume();

        }
    }//GEN-LAST:event_atndTextKeyTyped

    private void atndTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_atndTextFocusLost
        //check whether that attend number is correct.
        String nl = atndText.getText();
        int n2 = 0;
        if (nl.length() != 0) {//check whether the input size is empty or not.
            n2 = Integer.parseInt(nl);
        }

        String num = NICText.getText();
        int n3 = 0;
        if (num.length() != 0) { //check whether the input size is empty or not.
            n3 = Integer.parseInt(num);
        }

        try {
            connection c = new connection();
            Connection cn = c.getConnect();
            Statement st = cn.createStatement();

            if (n2 != 0) { //if the valid patient nic enter you can add details.
                ResultSet rs = st.executeQuery("select * from p_attendance where PatndNo='" + n2 + "'");
                if (rs.next() && n3 != 0) {
                    int n = rs.getInt("NIC");
                    if (n != n3) {
                        JOptionPane.showMessageDialog(this, "Didn't match patient NIC and Attend number.");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid patient attend.");
                }

            }
        } catch (Exception e) {
            System.out.print(e.getMessage());
        }

    }//GEN-LAST:event_atndTextFocusLost

    private void numberTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numberTextKeyTyped
        char vchar = evt.getKeyChar();//this will stop entering characters instead of numbers.
        if ((!(Character.isDigit(vchar))) || (vchar == KeyEvent.VK_BACKSPACE) || (vchar == KeyEvent.VK_DELETE)) {
            evt.consume();

        }
    }//GEN-LAST:event_numberTextKeyTyped

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        try { //you can update patient details.
            connection c = new connection();
            Connection cn = c.getConnect();
            Statement st = cn.createStatement();
            this.setData();
            ResultSet rs = st.executeQuery("select * from testReport where testNo='" + this.testno + "'");

            if (rs.next()) { 
                int n1 = rs.getInt("NIC");
                int n2 = rs.getInt("PatndNo");
                if (this.nic == n1 && this.atndno == n2) { //check whether patient nic and attend numbers were match.
                    JOptionPane.showMessageDialog(this, "testNo already exist");
                }

            } else {
                ResultSet rs1 = st.executeQuery("select * from medTest where NIC='" + this.nic + "'");
                if (rs1.next()) {
                    int tn = rs1.getInt("testNo");
                    int pn = rs1.getInt("PatndNo");
                    if (this.testno == tn && this.atndno == pn) {
                        st.executeUpdate("insert into testReport(testNo, NIC, PatndNo, name, result) values('" + this.testno + "','" + this.nic + "','" + this.atndno + "', '" + this.testn + "','" + this.result + "')");
                        JOptionPane.showMessageDialog(this, "successfullyupdated");
                        this.reset();
                    } else {
                        JOptionPane.showMessageDialog(this, "invalid data first add details in medical test");
                        this.reset();
                    }
                }
            }

        } catch (Exception e) {
            System.out.print(e.getMessage());
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void getDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getDataActionPerformed
        try {
            connection c = new connection();
            Connection cn = c.getConnect();
            Statement st = cn.createStatement();
            String a = NICText.getText();
            int n = 0;
            if (a.length() > 0) {
                n = Integer.parseInt(a);
            }
            if (n > 0) {
                ResultSet rs = st.executeQuery("select * from medTest where NIC='" + n + "'");
                if (rs.next()) {
                    int tno = rs.getInt("testNo");
                    int atno = rs.getInt("PatndNo");
                    numberText.setText(String.valueOf(tno));
                    atndText.setText(String.valueOf(atno));
                } else {
                    JOptionPane.showMessageDialog(this, "Input is empty");
                }
            }

        } catch (Exception e) {
            System.out.print(e.getMessage());
        }
    }//GEN-LAST:event_getDataActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String a = NICText.getText();
        int n = 0;
        if (a.length() > 0) {
            n = Integer.parseInt(a);
        }
        try {
            connection c = new connection();
            Connection cn = c.getConnect();
            Statement st = cn.createStatement();

            ResultSet rs = st.executeQuery("select * from testReport where NIC='" + n + "'");

            if (rs.next()) {
                st.executeUpdate("delete from testReport where NIC='" + n + "'");
                JOptionPane.showMessageDialog(this, "successfully deleted!");
                this.reset();
            } else {
                JOptionPane.showMessageDialog(this, "Invalid ID");
            }
        } catch (Exception e) {
            System.out.print(e.getMessage());
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        medicalTest e = new medicalTest();
        e.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TestDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField NICText;
    private javax.swing.JTextField atndText;
    private javax.swing.JButton getData;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea nameText;
    private javax.swing.JTextField numberText;
    private javax.swing.JTextArea resultText;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
